// <auto-generated />
using Art_Gallery;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Art_Gallery.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtPieceCategory", b =>
                {
                    b.Property<int>("artPiecesArtPieceId")
                        .HasColumnType("int");

                    b.Property<int>("categoriesCategoryId")
                        .HasColumnType("int");

                    b.HasKey("artPiecesArtPieceId", "categoriesCategoryId");

                    b.HasIndex("categoriesCategoryId");

                    b.ToTable("ArtPieceCategory");
                });

            modelBuilder.Entity("Art_Gallery.Model.ArtPieceItems.ArtPiece", b =>
                {
                    b.Property<int>("ArtPieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtPieceId"));

                    b.Property<string>("ArtPieceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ArtPiecePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ArtPieceTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("ArtPieceId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ArtPieces");
                });

            modelBuilder.Entity("Art_Gallery.Model.CategoryItems.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Art_Gallery.Model.CustomerItems.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Art_Gallery.Model.LoyaltyCard", b =>
                {
                    b.Property<int>("LoyaltyCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoyaltyCardId"));

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("LoyaltyCardId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("LoyaltyCards");
                });

            modelBuilder.Entity("ArtPieceCategory", b =>
                {
                    b.HasOne("Art_Gallery.Model.ArtPieceItems.ArtPiece", null)
                        .WithMany()
                        .HasForeignKey("artPiecesArtPieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Art_Gallery.Model.CategoryItems.Category", null)
                        .WithMany()
                        .HasForeignKey("categoriesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Art_Gallery.Model.ArtPieceItems.ArtPiece", b =>
                {
                    b.HasOne("Art_Gallery.Model.CustomerItems.Customer", "customer")
                        .WithMany("ArtPieces")
                        .HasForeignKey("CustomerId");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Art_Gallery.Model.LoyaltyCard", b =>
                {
                    b.HasOne("Art_Gallery.Model.CustomerItems.Customer", "Customer")
                        .WithOne("LoyaltyCard")
                        .HasForeignKey("Art_Gallery.Model.LoyaltyCard", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Art_Gallery.Model.CustomerItems.Customer", b =>
                {
                    b.Navigation("ArtPieces");

                    b.Navigation("LoyaltyCard");
                });
#pragma warning restore 612, 618
        }
    }
}
